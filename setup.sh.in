#!/bin/sh

set -e
set -u

display() {
  lines=$(wc -l "$TEMPFILE" | cut -d ' ' -f 1)
  case $lines in
    0) echo ;;
    1) head -1 $TEMPFILE ;;
    *) echo ; cat $TEMPFILE | sed -e 's/^/  /g'
  esac
}

run() {
  message=$1
  command=$2
  fix=${3-No}
  type=${4-Error}

  echo -ne "> $message...\r"
  eval $command > $TEMPFILE 2>&1 && { echo "✓ $(display)$SPACE"; return 0; } || {
    echo "✕ $type #$?: $(display)$SPACE"
    echo
    echo "  Cannot verify $message executing \`$command'"

    if [ Warning == $type ] ; then
      echo "  Ignoring for the moment"
      return 0
    fi

    if [ No == "$fix" ] || [ Unattended == $MODE ] ; then
      echo "Installation cannot continue."
      return 1
    fi

    echo "This can be fixed by running \`$fix'"
    echo
    read -p 'Should we do this now (y/N)? ' answer
    if [ y == "$answer" ] ; then
      eval $fix
      run "$message" "$command"
      return $?
    fi

    echo "OK, you need to fix this yourself, then."
    return 2
  }
}

download() {
  url=$1
  target=$2

  echo -n '> Download'
  if type curl >/dev/null 2>&1; then
    curl '-#' -L "$url" -o $target
  elif type wget >/dev/null 2>&1; then
    wget -nv "$url" -O $target
  fi
  return $?
}

bundle_php() {
  releases=http://windows.php.net/downloads/releases/

  download $releases - | grep -Eo 'php-[0-9.]+-nts-Win32-[VCx0-9-]+.zip' | sort -rn | uniq > $TEMPFILE

  echo "> Select which PHP version you want to use"
  PS3="Select: "
  select release in $(cat $TEMPFILE); do
    test -f $release || download $releases/$release $release

    pwd=$(cygpath -w $(pwd) | sed -e 's#\\#\\\\#g')
    target=$(basename $release .zip)
    mkdir -p $target
    echo "var shell = WSH.createObject('Shell.Application');" > $TEMPFILE
    echo "var origin = shell.nameSpace('$pwd\\\\$release').items();" >> $TEMPFILE
    echo "var target = shell.nameSpace('$pwd\\\\$target');" >> $TEMPFILE
    echo "for (var i = 0; i < origin.count; i++) {" >> $TEMPFILE
    echo "  WScript.Echo('  ' + origin.item(i));" >> $TEMPFILE
    echo "  target.copyHere(origin.item(i), 20);" >> $TEMPFILE
    echo "}"  >> $TEMPFILE
    echo "> Extracting into $target"
    cscript //NoLogo //e:JScript $(cygpath -w $TEMPFILE)
    rm $release
    break
  done

  PATH=$PATH:$target
  return 0
}

configure() {
  echo -ne "> Configuration\r"
  truncate -s 0 xp.ini
  for option in "$@"; do
    echo $option >> xp.ini
  done
  echo "✓ $(ls -al xp.ini)"
  cat xp.ini | sed -e 's/^/  /g'
}

echo -e "\e[32;1mXP Runners setup (@VERSION@)\e[0m"
echo '(c) 2016 https://github.com/xp-runners/reference/'
echo

TEMPFILE=$(mktemp -u)
SPACE='                  '
MODE=Default
CHECKS=Error
FORCE=
while getopts :uf flag ; do
  case $flag in
    u) MODE=Unattended ; echo '> Unattended mode' ;;
    f) CHECKS=Warning ; echo '> Ignoring errors from prerequisites checks' ;;
  esac
done

OS=$(uname)
if [ 'Linux' == "$OS" ] ; then OS=$(lsb_release -si) ; fi
case $OS in
  CYGWIN*)
    EXE=xp.exe

    run 'Cygwin' "uname -a"
    run '.NET Framework installed' "ls -d $(cygpath -m $WINDIR)/Microsoft.NET/Framework*/v*" No $CHECKS
    run 'PHP runtime available' "php.exe -v" "bundle_php" $CHECKS
    run 'Tar' "type tar" "/cygwinsetup.exe -P tar -q -n -W"
    run 'Curl' "type curl || type wget" "/cygwinsetup.exe -P curl -q -n -W"

    php=$(which php.exe)
    ver=$($php -r 'echo substr(PHP_VERSION, 0, 3);')
    configure \
      "rt=$ver" "" \
      "[runtime@$ver]" \
      "default=$(cygpath -w $php)" \
      "extension_dir=$(cygpath -w $(dirname $php))\\ext" \
      "extension=php_com_dotnet.dll"
    ;;

  Ubuntu*|Debian*)
    EXE=xp

    run 'Linux' "uname -a"
    run '.NET Framework installed' "mono --version" "sudo apt-get install libmono-corlib4.5-cil libmono-2.0-1" $CHECKS
    run 'PHP runtime available' "php -v" "sudo apt-get install php5-cli" $CHECKS
    run 'Tar' "type tar" "sudo apt-get install tar"
    run 'Curl' "type curl || type wget" "sudo apt-get install curl"

    php=$(which php)
    ver=$($php -r 'echo substr(PHP_VERSION, 0, 3);')
    configure "rt=$ver" "" "[runtime@$ver]" "default=$php"
    ;;

  *)
    EXE=xp

    run 'Un*x' "uname -a"
    run '.NET Framework installed' "mono --version" No $CHECKS
    run 'PHP runtime available' "php -v" No $CHECKS
    run 'Tar' "type tar"
    run 'Curl' "type curl || type wget"

    php=$(which php)
    ver=$($php -r 'echo substr(PHP_VERSION, 0, 3);')
    configure "rt=$ver" "" "[runtime@$ver]" "default=$php"
    ;;
esac

TARFILE=$(mktemp -u)
download https://bintray.com/artifact/download/xp-runners/generic/xp-runners_@VERSION@.tar.gz $TARFILE

run 'Extract' "tar xvfz $TARFILE $EXE class-main.php web-main.php"
run 'Test' "ls -al $(pwd)/$EXE"

echo
echo "Done, runners installed to $(pwd)"
rm "$TEMPFILE" "$TARFILE"
